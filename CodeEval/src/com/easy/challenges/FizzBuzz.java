/*
 *
 *Description:

Players generally sit in a circle. 
The player designated to go first says the number "1", and each 
player thenceforth counts one number in turn. However, any number
divisible by 'A' e.g. three is replaced by the word fizz and any
divisible by 'B' e.g. five by the word buzz. Numbers divisible 
by both become fizz buzz. A player who hesitates or makes a 
mistake is either eliminated.

Write a program that prints out the the pattern 
generated by such a scenario given the values of 'A'/'B' and 'N' 
which are read from an input text file. The input text file 
contains three space delimited numbers i.e. A, B, N. 
The program should then print out the final series of numbers 
using 'F' for fizz, 'B' for 'buzz' and 'FB' for fizz buzz.
 
*/

package com.easy.challenges;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;

class FizzBuzz {

	public static void main(String args[])
	{		
		try{
			String line = null;
			String[] result = null;
			int fizz = 0;
			int buzz = 0;
			
			//FileReader reader = new FileReader(new File ("C:\\FizzBuzz.txt"));
			File file = new File(args[0]);
			FileReader reader = new FileReader(file);
			BufferedReader bf = new BufferedReader(reader);

			while((line = bf.readLine())!= null)
			{
				//System.out.println(line);
				result = line.split(" ");
				for (String token:result){
					//System.out.println(token);
				}
				fizz = Integer.parseInt(result[0]);
				buzz = Integer.parseInt(result[1]);
				//System.out.print("fizz " + fizz + "buzz "+ buzz);
				
				for(int i =1; i<=Integer.parseInt(result[2]); i++)
				{
					if(i%fizz == 0)
					{
						if(i%buzz == 0)
						{
							System.out.print("FB ");
						}
						else
						{
							System.out.print("F ");
						}
					}
					else if(i%buzz == 0)
					{
						System.out.print("B ");
					}
					else
					{
						System.out.print(i + " ");
					}
				}				
				System.out.println("");
			}		
			bf.close();
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
	}
}
